
# _parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'C_LBRACE C_RBRACE DEF ELSE E_LBRACE E_RBRACE FRONT_IS_CLEAR IF IFELSE INT I_LBRACE I_RBRACE LEFT_IS_CLEAR MARKERS_PRESENT MOVE M_LBRACE M_RBRACE NOT NO_MARKERS_PRESENT PICK_MARKER PUT_MARKER REPEAT RIGHT_IS_CLEAR RUN R_LBRACE R_RBRACE TURN_LEFT TURN_RIGHT WHILE W_LBRACE W_RBRACEprog : DEF RUN M_LBRACE stmt_or_empty M_RBRACEstmt : while\n                | repeat\n                | stmt_stmt\n                | action\n                | if\n                | ifelse\n        stmt_or_empty : stmt\n                         | empty\n        stmt_stmt : stmt stmt\n        if : IF C_LBRACE cond C_RBRACE I_LBRACE stmt_or_empty I_RBRACE\n        ifelse : IFELSE C_LBRACE cond C_RBRACE I_LBRACE stmt_or_empty I_RBRACE ELSE E_LBRACE stmt_or_empty E_RBRACE\n        while : WHILE C_LBRACE cond C_RBRACE W_LBRACE stmt_or_empty W_RBRACE\n        repeat : REPEAT cste R_LBRACE stmt_or_empty R_RBRACE\n        cond : cond_without_not\n                | NOT C_LBRACE cond_without_not C_RBRACE\n        cond_without_not : FRONT_IS_CLEAR\n                            | LEFT_IS_CLEAR\n                            | RIGHT_IS_CLEAR\n                            | MARKERS_PRESENT\n                            | NO_MARKERS_PRESENT\n        action : MOVE\n                  | TURN_RIGHT\n                  | TURN_LEFT\n                  | PICK_MARKER\n                  | PUT_MARKER\n        cste : INT\n        empty :'
    
_lr_action_items = {'DEF':([0,],[2,]),'$end':([1,23,],[0,-1,]),'RUN':([2,],[3,]),'M_LBRACE':([3,],[4,]),'M_RBRACE':([4,5,6,7,8,9,10,11,12,13,16,17,18,19,20,24,48,55,56,61,],[-28,23,-8,-9,-2,-3,-4,-5,-6,-7,-22,-23,-24,-25,-26,-10,-14,-13,-11,-12,]),'WHILE':([4,6,8,9,10,11,12,13,16,17,18,19,20,24,38,46,48,49,50,55,56,59,61,],[14,14,-2,-3,-4,-5,-6,-7,-22,-23,-24,-25,-26,14,14,14,-14,14,14,-13,-11,14,-12,]),'REPEAT':([4,6,8,9,10,11,12,13,16,17,18,19,20,24,38,46,48,49,50,55,56,59,61,],[15,15,-2,-3,-4,-5,-6,-7,-22,-23,-24,-25,-26,15,15,15,-14,15,15,-13,-11,15,-12,]),'MOVE':([4,6,8,9,10,11,12,13,16,17,18,19,20,24,38,46,48,49,50,55,56,59,61,],[16,16,-2,-3,-4,-5,-6,-7,-22,-23,-24,-25,-26,16,16,16,-14,16,16,-13,-11,16,-12,]),'TURN_RIGHT':([4,6,8,9,10,11,12,13,16,17,18,19,20,24,38,46,48,49,50,55,56,59,61,],[17,17,-2,-3,-4,-5,-6,-7,-22,-23,-24,-25,-26,17,17,17,-14,17,17,-13,-11,17,-12,]),'TURN_LEFT':([4,6,8,9,10,11,12,13,16,17,18,19,20,24,38,46,48,49,50,55,56,59,61,],[18,18,-2,-3,-4,-5,-6,-7,-22,-23,-24,-25,-26,18,18,18,-14,18,18,-13,-11,18,-12,]),'PICK_MARKER':([4,6,8,9,10,11,12,13,16,17,18,19,20,24,38,46,48,49,50,55,56,59,61,],[19,19,-2,-3,-4,-5,-6,-7,-22,-23,-24,-25,-26,19,19,19,-14,19,19,-13,-11,19,-12,]),'PUT_MARKER':([4,6,8,9,10,11,12,13,16,17,18,19,20,24,38,46,48,49,50,55,56,59,61,],[20,20,-2,-3,-4,-5,-6,-7,-22,-23,-24,-25,-26,20,20,20,-14,20,20,-13,-11,20,-12,]),'IF':([4,6,8,9,10,11,12,13,16,17,18,19,20,24,38,46,48,49,50,55,56,59,61,],[21,21,-2,-3,-4,-5,-6,-7,-22,-23,-24,-25,-26,21,21,21,-14,21,21,-13,-11,21,-12,]),'IFELSE':([4,6,8,9,10,11,12,13,16,17,18,19,20,24,38,46,48,49,50,55,56,59,61,],[22,22,-2,-3,-4,-5,-6,-7,-22,-23,-24,-25,-26,22,22,22,-14,22,22,-13,-11,22,-12,]),'R_RBRACE':([6,7,8,9,10,11,12,13,16,17,18,19,20,24,38,43,48,55,56,61,],[-8,-9,-2,-3,-4,-5,-6,-7,-22,-23,-24,-25,-26,-10,-28,48,-14,-13,-11,-12,]),'W_RBRACE':([6,7,8,9,10,11,12,13,16,17,18,19,20,24,46,48,51,55,56,61,],[-8,-9,-2,-3,-4,-5,-6,-7,-22,-23,-24,-25,-26,-10,-28,-14,55,-13,-11,-12,]),'I_RBRACE':([6,7,8,9,10,11,12,13,16,17,18,19,20,24,48,49,50,53,54,55,56,61,],[-8,-9,-2,-3,-4,-5,-6,-7,-22,-23,-24,-25,-26,-10,-14,-28,-28,56,57,-13,-11,-12,]),'E_RBRACE':([6,7,8,9,10,11,12,13,16,17,18,19,20,24,48,55,56,59,60,61,],[-8,-9,-2,-3,-4,-5,-6,-7,-22,-23,-24,-25,-26,-10,-14,-13,-11,-28,61,-12,]),'C_LBRACE':([14,21,22,32,],[25,28,29,42,]),'INT':([15,],[27,]),'NOT':([25,28,29,],[32,32,32,]),'FRONT_IS_CLEAR':([25,28,29,42,],[33,33,33,33,]),'LEFT_IS_CLEAR':([25,28,29,42,],[34,34,34,34,]),'RIGHT_IS_CLEAR':([25,28,29,42,],[35,35,35,35,]),'MARKERS_PRESENT':([25,28,29,42,],[36,36,36,36,]),'NO_MARKERS_PRESENT':([25,28,29,42,],[37,37,37,37,]),'R_LBRACE':([26,27,],[38,-27,]),'C_RBRACE':([30,31,33,34,35,36,37,39,40,47,52,],[41,-15,-17,-18,-19,-20,-21,44,45,52,-16,]),'W_LBRACE':([41,],[46,]),'I_LBRACE':([44,45,],[49,50,]),'ELSE':([57,],[58,]),'E_LBRACE':([58,],[59,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'prog':([0,],[1,]),'stmt_or_empty':([4,38,46,49,50,59,],[5,43,51,53,54,60,]),'stmt':([4,6,24,38,46,49,50,59,],[6,24,24,6,6,6,6,6,]),'empty':([4,38,46,49,50,59,],[7,7,7,7,7,7,]),'while':([4,6,24,38,46,49,50,59,],[8,8,8,8,8,8,8,8,]),'repeat':([4,6,24,38,46,49,50,59,],[9,9,9,9,9,9,9,9,]),'stmt_stmt':([4,6,24,38,46,49,50,59,],[10,10,10,10,10,10,10,10,]),'action':([4,6,24,38,46,49,50,59,],[11,11,11,11,11,11,11,11,]),'if':([4,6,24,38,46,49,50,59,],[12,12,12,12,12,12,12,12,]),'ifelse':([4,6,24,38,46,49,50,59,],[13,13,13,13,13,13,13,13,]),'cste':([15,],[26,]),'cond':([25,28,29,],[30,39,40,]),'cond_without_not':([25,28,29,42,],[31,31,31,47,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> prog","S'",1,None,None,None),
  ('prog -> DEF RUN M_LBRACE stmt_or_empty M_RBRACE','prog',5,'p_prog','parser_for_synthesis.py',178),
  ('stmt -> while','stmt',1,'p_stmt','parser_for_synthesis.py',189),
  ('stmt -> repeat','stmt',1,'p_stmt','parser_for_synthesis.py',190),
  ('stmt -> stmt_stmt','stmt',1,'p_stmt','parser_for_synthesis.py',191),
  ('stmt -> action','stmt',1,'p_stmt','parser_for_synthesis.py',192),
  ('stmt -> if','stmt',1,'p_stmt','parser_for_synthesis.py',193),
  ('stmt -> ifelse','stmt',1,'p_stmt','parser_for_synthesis.py',194),
  ('stmt_or_empty -> stmt','stmt_or_empty',1,'p_stmt_or_empty','parser_for_synthesis.py',201),
  ('stmt_or_empty -> empty','stmt_or_empty',1,'p_stmt_or_empty','parser_for_synthesis.py',202),
  ('stmt_stmt -> stmt stmt','stmt_stmt',2,'p_stmt_stmt','parser_for_synthesis.py',213),
  ('if -> IF C_LBRACE cond C_RBRACE I_LBRACE stmt_or_empty I_RBRACE','if',7,'p_if','parser_for_synthesis.py',226),
  ('ifelse -> IFELSE C_LBRACE cond C_RBRACE I_LBRACE stmt_or_empty I_RBRACE ELSE E_LBRACE stmt_or_empty E_RBRACE','ifelse',11,'p_ifelse','parser_for_synthesis.py',248),
  ('while -> WHILE C_LBRACE cond C_RBRACE W_LBRACE stmt_or_empty W_RBRACE','while',7,'p_while','parser_for_synthesis.py',281),
  ('repeat -> REPEAT cste R_LBRACE stmt_or_empty R_RBRACE','repeat',5,'p_repeat','parser_for_synthesis.py',310),
  ('cond -> cond_without_not','cond',1,'p_cond','parser_for_synthesis.py',337),
  ('cond -> NOT C_LBRACE cond_without_not C_RBRACE','cond',4,'p_cond','parser_for_synthesis.py',338),
  ('cond_without_not -> FRONT_IS_CLEAR','cond_without_not',1,'p_cond_without_not','parser_for_synthesis.py',358),
  ('cond_without_not -> LEFT_IS_CLEAR','cond_without_not',1,'p_cond_without_not','parser_for_synthesis.py',359),
  ('cond_without_not -> RIGHT_IS_CLEAR','cond_without_not',1,'p_cond_without_not','parser_for_synthesis.py',360),
  ('cond_without_not -> MARKERS_PRESENT','cond_without_not',1,'p_cond_without_not','parser_for_synthesis.py',361),
  ('cond_without_not -> NO_MARKERS_PRESENT','cond_without_not',1,'p_cond_without_not','parser_for_synthesis.py',362),
  ('action -> MOVE','action',1,'p_action','parser_for_synthesis.py',376),
  ('action -> TURN_RIGHT','action',1,'p_action','parser_for_synthesis.py',377),
  ('action -> TURN_LEFT','action',1,'p_action','parser_for_synthesis.py',378),
  ('action -> PICK_MARKER','action',1,'p_action','parser_for_synthesis.py',379),
  ('action -> PUT_MARKER','action',1,'p_action','parser_for_synthesis.py',380),
  ('cste -> INT','cste',1,'p_cste','parser_for_synthesis.py',395),
  ('empty -> <empty>','empty',0,'p_empty','parser_for_synthesis.py',412),
]
